[["index.html", "sclet: A Lightweight Toolkit for Single-Cell Data Analysis Preface", " sclet: A Lightweight Toolkit for Single-Cell Data Analysis Guangchuang Yu Department of Bioinformatics, School of Basic Medical Sciences, Southern Medical University guangchuangyu@gmail.com 2024-10-09 Preface Hello World. "],["basic-preprocessing-and-clustering.html", "1 Basic: preprocessing and clustering 1.1 Read 10X data 1.2 QC 1.3 Variable features 1.4 Dimensional reduction 1.5 Clustering 1.6 UMAP 1.7 Find Markers 1.8 Cell cluster annotation", " 1 Basic: preprocessing and clustering We created Seurat-like functions to help you get started effortlessly. 1.1 Read 10X data library(sclet) dir &lt;- &quot;filtered_gene_bc_matrices/hg19&quot; pbmc &lt;- Read10X(dir) 1.2 QC # colData(pbmc)$percent.mt &lt;- PercentageFeatureSet(pbmc, &quot;^MT-&quot;) pbmc[[&quot;percent.mt&quot;]] &lt;- PercentageFeatureSet(pbmc, &quot;^MT-&quot;) VlnPlot(pbmc, features = c(&quot;nFeature_RNA&quot;, &quot;nCount_RNA&quot;, &quot;percent.mt&quot;)) subset_feature(pbmc, 10) ## ************************************************** &gt;=0 | 32738 (100%) ## ************************* &gt;=1 | 16634 (51%) ## ********************** &gt;=2 | 14702 (45%) ## ********************* &gt;=3 | 13714 (42%) ## ******************** &gt;=4 | 13034 (40%) ## ******************* &gt;=5 | 12572 (38%) ## ******************* &gt;=6 | 12198 (37%) ## ****************** &gt;=7 | 11876 (36%) ## ****************** &gt;=8 | 11627 (36%) ## ***************** &gt;=9 | 11379 (35%) ## ***************** &gt;=10 | 11139 (34%) pbmc &lt;- subset_feature(pbmc, mincell = 3, peek=FALSE) pbmc &lt;- subset(pbmc, subset = nFeature_RNA &gt; 200 &amp; nFeature_RNA &lt; 2500 &amp; percent.mt &lt; 5) pbmc ## class: SingleCellExperiment ## dim: 13714 2638 ## metadata(1): Samples ## assays(1): counts ## rownames(13714): AL627309.1 AP006222.2 ... ## PNRC2_ENSG00000215700 SRSF10_ENSG00000215699 ## rowData names(2): ID Symbol ## colnames: NULL ## colData names(5): Sample Barcode nFeature_RNA ## nCount_RNA percent.mt ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0): plot1 &lt;- FeatureScatter(pbmc, feature1 = &quot;nCount_RNA&quot;, feature2 = &quot;percent.mt&quot;) plot2 &lt;- FeatureScatter(pbmc, feature1 = &quot;nCount_RNA&quot;, feature2 = &quot;nFeature_RNA&quot;) library(aplot) plot_list(plot1, plot2) Users can also use plotColData() to visualize the QC data. # VlnPlot-like p1 &lt;- plotColData(pbmc, y = &#39;nCount_RNA&#39;) # FeatureScatter-like p2 &lt;- plotColData(pbmc, x = &quot;nCount_RNA&quot;, y = &quot;percent.mt&quot;) plot_list(p1, p2) 1.3 Variable features pbmc &lt;- NormalizeData(pbmc) pbmc &lt;- FindVariableFeatures(pbmc) top10 &lt;- head(VariableFeatures(pbmc), 10) top10 ## [1] &quot;PPBP&quot; &quot;LYZ&quot; &quot;S100A9&quot; &quot;IGLL5&quot; &quot;GNLY&quot; &quot;FTL&quot; ## [7] &quot;PF4&quot; &quot;FTH1&quot; &quot;GNG11&quot; &quot;S100A8&quot; VariableFeaturePlot(pbmc, label = top10) 1.4 Dimensional reduction pbmc &lt;- ScaleData(pbmc) pbmc &lt;- runPCA(pbmc, subset_row = VariableFeatures(pbmc), exprs_values = &quot;scaled&quot;) ElbowPlot(pbmc) 1.5 Clustering set.seed(2024-10-01) pbmc &lt;- FindNeighbors(pbmc, dims = 1:10) pbmc &lt;- FindClusters(pbmc) head(Idents(pbmc), 5) ## AAACATACAACCAC-1 AAACATTGAGCTAC-1 AAACATTGATCAGC-1 ## 1 2 3 ## AAACCGTGCTTCCG-1 AAACCGTGTATGCG-1 ## 4 5 ## Levels: 1 2 3 4 5 6 7 8 9 1.6 UMAP pbmc &lt;- RunUMAP(pbmc, 1:10) library(ggsc) library(aplot) p1 &lt;- sc_dim(pbmc, reduction=&quot;PCA&quot;) p2 &lt;- sc_dim(pbmc, reduction=&quot;UMAP&quot;) plot_list(gglist = list(PCA=p1, UMAP=p2)) 1.7 Find Markers # find all markers of cluster 2 cluster2.markers &lt;- FindMarkers(pbmc, ident.1 = 2) head(cluster2.markers, n = 5) ## pval padj avg_log2FC pct.1 pct.2 ## CD79A 5.305484e-102 7.275940e-98 68.33509 1 0.052 ## CD74 1.995011e-87 1.367979e-83 -106.95385 1 0.787 ## CD79B 2.013334e-85 9.203619e-82 54.24136 1 0.141 ## MS4A1 1.920813e-84 6.585508e-81 46.48265 1 0.062 ## HLA-DQA1 2.199464e-82 6.032690e-79 10.08589 1 0.098 # find all markers distinguishing cluster 5 from clusters 0 and 3 cluster5.markers &lt;- FindMarkers(pbmc, ident.1 = 5, ident.2 = c(0, 3)) head(cluster5.markers, n = 5) ## pval padj avg_log2FC pct.1 pct.2 ## GZMB 4.691392e-80 6.433775e-76 156.62778 1 0.040 ## NKG7 3.980428e-78 2.729380e-74 100.09227 1 0.172 ## GNLY 5.141676e-77 2.350431e-73 111.81262 1 0.120 ## PRF1 3.439975e-72 1.179396e-68 65.89194 1 0.091 ## CST7 2.280830e-69 6.255860e-66 54.83849 1 0.135 # find markers for every cluster compared to all remaining cells, # report only the positive ones library(dplyr) pbmc.markers &lt;- FindAllMarkers(pbmc, only.pos = TRUE) topN_marker &lt;- function(markers, n) { markers %&gt;% group_by(cluster) %&gt;% dplyr::filter(avg_log2FC &gt; 1) %&gt;% slice_head(n = n) %&gt;% ungroup() } top10 &lt;- topN_marker(pbmc.markers, 10) split(top10$gene, top10$cluster) ## $`1` ## [1] &quot;CCL5&quot; &quot;NKG7&quot; &quot;GZMK&quot; &quot;CST7&quot; &quot;CTSW&quot; ## [6] &quot;IL32&quot; &quot;TMSB10&quot; &quot;CD8A&quot; &quot;C1orf162&quot; &quot;KLRG1&quot; ## ## $`2` ## [1] &quot;CD79A&quot; &quot;CD79B&quot; &quot;MS4A1&quot; &quot;HLA-DQA1&quot; ## [5] &quot;HLA-DQB1&quot; &quot;TCL1A&quot; &quot;LINC00926&quot; &quot;VPREB3&quot; ## [9] &quot;SRGN&quot; &quot;HLA-DQA2&quot; ## ## $`3` ## [1] &quot;LTB&quot; &quot;LDHB&quot; &quot;IL32&quot; &quot;IL7R&quot; &quot;CD3D&quot; &quot;RPS3&quot; &quot;RPS25&quot; ## [8] &quot;RPS27&quot; &quot;RPS12&quot; &quot;RPS18&quot; ## ## $`4` ## [1] &quot;S100A9&quot; &quot;S100A8&quot; &quot;LYZ&quot; &quot;LGALS2&quot; &quot;FCN1&quot; &quot;TYROBP&quot; ## [7] &quot;CST3&quot; &quot;FTL&quot; &quot;FTH1&quot; &quot;GPX1&quot; ## ## $`5` ## [1] &quot;GZMB&quot; &quot;GNLY&quot; &quot;NKG7&quot; &quot;PRF1&quot; &quot;FGFBP2&quot; &quot;GZMA&quot; ## [7] &quot;CST7&quot; &quot;CTSW&quot; &quot;SPON2&quot; &quot;CD247&quot; ## ## $`6` ## [1] &quot;FCGR3A&quot; &quot;LST1&quot; &quot;FCER1G&quot; ## [4] &quot;IFITM3&quot; &quot;SERPINA1&quot; &quot;COTL1&quot; ## [7] &quot;RP11-290F20.3&quot; &quot;MS4A7&quot; &quot;IFITM2&quot; ## [10] &quot;FTL&quot; ## ## $`7` ## [1] &quot;RPS27&quot; &quot;MALAT1&quot; &quot;RPL32&quot; &quot;RPL9&quot; &quot;SH3BGRL3&quot; ## [6] &quot;RPS25&quot; &quot;RPL30&quot; &quot;RPS12&quot; &quot;RPL21&quot; &quot;RPS13&quot; ## ## $`8` ## [1] &quot;FCER1A&quot; &quot;ENHO&quot; &quot;PHACTR1&quot; &quot;CLEC10A&quot; &quot;CD1C&quot; ## [6] &quot;SERPINF1&quot; &quot;CLIC2&quot; &quot;HLA-DQA2&quot; &quot;GSN&quot; &quot;NDRG2&quot; ## ## $`9` ## [1] &quot;PF4&quot; &quot;GP9&quot; &quot;ITGA2B&quot; &quot;AP001189.4&quot; ## [5] &quot;GNG11&quot; &quot;SDPR&quot; &quot;TMEM40&quot; &quot;TUBB1&quot; ## [9] &quot;SPARC&quot; &quot;PTCRA&quot; 1.7.1 Marker gene information top1 &lt;- topN_marker(pbmc.markers, 1) gene_table &lt;- gene_summary_table(top1, gene_col = &#39;gene&#39;, cluster_col = &#39;cluster&#39;, keyType=&#39;SYMBOL&#39;, output = &quot;data.frame&quot;) gene_table ## ENTREZID gene pval padj avg_log2FC ## 1 2205 FCER1A 1.512234e-51 2.073878e-47 66.02055 ## 2 2214 FCGR3A 8.939859e-77 1.226012e-72 26.60405 ## 3 3002 GZMB 4.753779e-82 6.519332e-78 148.98625 ## 4 4050 LTB 2.222889e-52 3.048470e-48 59.65963 ## 5 5196 PF4 3.554569e-72 4.874736e-68 92.82031 ## 6 6232 RPS27 4.326148e-45 8.475542e-42 10.60607 ## 7 6280 S100A9 6.246079e-116 8.565872e-112 226.06146 ## 8 6352 CCL5 4.316148e-98 5.919165e-94 67.29457 ## 9 973 CD79A 5.305484e-102 7.275940e-98 68.33509 ## pct.1 pct.2 cluster name ## 1 1 0.012 8 FCER1A ## 2 1 0.143 6 FCGR3A ## 3 1 0.073 5 GZMB ## 4 1 0.651 3 LTB ## 5 1 0.003 9 PF4 ## 6 1 0.996 7 RPS27 ## 7 1 0.205 4 S100A9 ## 8 1 0.224 1 CCL5 ## 9 1 0.052 2 CD79A ## description ## 1 Fc epsilon receptor Ia ## 2 Fc gamma receptor IIIa ## 3 granzyme B ## 4 lymphotoxin beta ## 5 platelet factor 4 ## 6 ribosomal protein S27 ## 7 S100 calcium binding protein A9 ## 8 C-C motif chemokine ligand 5 ## 9 CD79a molecule ## summary ## 1 The immunoglobulin epsilon receptor (IgE receptor) is the initiator of the allergic response. When two or more high-affinity IgE receptors are brought together by allergen-bound IgE molecules, mediators such as histamine that are responsible for allergy symptoms are released. This receptor is comprised of an alpha subunit, a beta subunit, and two gamma subunits. The protein encoded by this gene represents the alpha subunit. [provided by RefSeq, Aug 2011] ## 2 This gene encodes a receptor for the Fc portion of immunoglobulin G, and it is involved in the removal of antigen-antibody complexes from the circulation, as well as other responses, including antibody dependent cellular mediated cytotoxicity and antibody dependent enhancement of virus infections. This gene (FCGR3A) is highly similar to another nearby gene (FCGR3B) located on chromosome 1. The receptor encoded by this gene is expressed on natural killer (NK) cells as an integral membrane glycoprotein anchored through a transmembrane peptide, whereas FCGR3B is expressed on polymorphonuclear neutrophils (PMN) where the receptor is anchored through a phosphatidylinositol (PI) linkage. Mutations in this gene are associated with immunodeficiency 20, and have been linked to susceptibility to recurrent viral infections, susceptibility to systemic lupus erythematosus, and alloimmune neonatal neutropenia. Alternatively spliced transcript variants encoding different isoforms have been found for this gene. [provided by RefSeq, Aug 2020] ## 3 This gene encodes a member of the granzyme subfamily of proteins, part of the peptidase S1 family of serine proteases. The encoded preproprotein is secreted by natural killer (NK) cells and cytotoxic T lymphocytes (CTLs) and proteolytically processed to generate the active protease, which induces target cell apoptosis. This protein also processes cytokines and degrades extracellular matrix proteins, and these roles are implicated in chronic inflammation and wound healing. Expression of this gene may be elevated in human patients with cardiac fibrosis. [provided by RefSeq, Sep 2016] ## 4 Lymphotoxin beta is a type II membrane protein of the TNF family. It anchors lymphotoxin-alpha to the cell surface through heterotrimer formation. The predominant form on the lymphocyte surface is the lymphotoxin-alpha 1/beta 2 complex (e.g. 1 molecule alpha/2 molecules beta) and this complex is the primary ligand for the lymphotoxin-beta receptor. The minor complex is lymphotoxin-alpha 2/beta 1. LTB is an inducer of the inflammatory response system and involved in normal development of lymphoid tissue. Lymphotoxin-beta isoform b is unable to complex with lymphotoxin-alpha suggesting a function for lymphotoxin-beta which is independent of lympyhotoxin-alpha. Alternative splicing results in multiple transcript variants encoding different isoforms. [provided by RefSeq, Jul 2008] ## 5 This gene encodes a member of the CXC chemokine family. This chemokine is released from the alpha granules of activated platelets in the form of a homotetramer which has high affinity for heparin and is involved in platelet aggregation. This protein is chemotactic for numerous other cell type and also functions as an inhibitor of hematopoiesis, angiogenesis and T-cell function. The protein also exhibits antimicrobial activity against Plasmodium falciparum. [provided by RefSeq, Oct 2014] ## 6 Ribosomes, the organelles that catalyze protein synthesis, consist of a small 40S subunit and a large 60S subunit. Together these subunits are composed of four RNA species and approximately 80 structurally distinct proteins. This gene encodes a member of the S27e family of ribosomal proteins and component of the 40S subunit. The encoded protein contains a C4-type zinc finger domain that can bind to zinc and may bind to nucleic acid. Mutations in this gene have been identified in numerous melanoma patients and in at least one patient with Diamond-Blackfan anemia (DBA). Elevated expression of this gene has been observed in various human cancers. As is typical for genes encoding ribosomal proteins, there are multiple processed pseudogenes of this gene dispersed through the genome. [provided by RefSeq, Jul 2018] ## 7 The protein encoded by this gene is a member of the S100 family of proteins containing 2 EF-hand calcium-binding motifs. S100 proteins are localized in the cytoplasm and/or nucleus of a wide range of cells, and involved in the regulation of a number of cellular processes such as cell cycle progression and differentiation. S100 genes include at least 13 members which are located as a cluster on chromosome 1q21. This protein may function in the inhibition of casein kinase and altered expression of this protein is associated with the disease cystic fibrosis. This antimicrobial protein exhibits antifungal and antibacterial activity. [provided by RefSeq, Nov 2014] ## 8 This gene is one of several chemokine genes clustered on the q-arm of chromosome 17. Chemokines form a superfamily of secreted proteins involved in immunoregulatory and inflammatory processes. The superfamily is divided into four subfamilies based on the arrangement of the N-terminal cysteine residues of the mature peptide. This chemokine, a member of the CC subfamily, functions as a chemoattractant for blood monocytes, memory T helper cells and eosinophils. It causes the release of histamine from basophils and activates eosinophils. This cytokine is one of the major HIV-suppressive factors produced by CD8+ cells. It functions as one of the natural ligands for the chemokine receptor chemokine (C-C motif) receptor 5 (CCR5), and it suppresses in vitro replication of the R5 strains of HIV-1, which use CCR5 as a coreceptor. Alternative splicing results in multiple transcript variants that encode different isoforms. [provided by RefSeq, Jul 2013] ## 9 The B lymphocyte antigen receptor is a multimeric complex that includes the antigen-specific component, surface immunoglobulin (Ig). Surface Ig non-covalently associates with two other proteins, Ig-alpha and Ig-beta, which are necessary for expression and function of the B-cell antigen receptor. This gene encodes the Ig-alpha protein of the B-cell antigen component. Alternatively spliced transcript variants encoding different isoforms have been described. [provided by RefSeq, Jul 2008] 1.8 Cell cluster annotation new_labels &lt;- c(&quot;CD8+ T&quot;,&quot;B&quot;,&quot;Memory CD4+&quot;,&quot;CD14+ Mono&quot;, &quot;NK&quot;,&quot;FCGR3A+ Mono&quot;,&quot;Native CD4+ T&quot;,&quot;DC&quot;,&quot;Platelet&quot;) pbmc &lt;- RenameIdents(pbmc, new_labels) sc_dim(pbmc, reduction=&quot;UMAP&quot;) + sc_dim_geom_label() "],["cell-type-annotation.html", "2 Cell type annotation 2.1 Manual annotation 2.2 Automat annotation", " 2 Cell type annotation 2.1 Manual annotation Please refer to the Cell cluster annotation session. 2.2 Automat annotation 2.2.1 Run SingleR library(SingleR) hpca &lt;- celldex::HumanPrimaryCellAtlasData() hpca ## class: SummarizedExperiment ## dim: 19363 713 ## metadata(0): ## assays(1): logcounts ## rownames(19363): A1BG A1BG-AS1 ... ZZEF1 ZZZ3 ## rowData names(0): ## colnames(713): GSM112490 GSM112491 ... GSM92233 ## GSM92234 ## colData names(3): label.main label.fine label.ont res &lt;- SingleR(test = assay(pbmc, &quot;logcounts&quot;), ref = hpca, labels = hpca$label.main) head(res) ## DataFrame with 6 rows and 4 columns ## scores labels delta.next ## &lt;matrix&gt; &lt;character&gt; &lt;numeric&gt; ## 1 0.1040907:0.233575:0.222844:... T_cells 0.0888618 ## 2 0.1017499:0.358524:0.299235:... B_cell 0.3046119 ## 3 0.0696533:0.265561:0.237793:... T_cells 0.1985708 ## 4 0.0863639:0.235842:0.275857:... Monocyte 0.0503585 ## 5 0.0737555:0.164465:0.175442:... NK_cell 0.0892196 ## 6 0.1281878:0.258801:0.249245:... T_cells 0.0775251 ## pruned.labels ## &lt;character&gt; ## 1 T_cells ## 2 B_cell ## 3 T_cells ## 4 Monocyte ## 5 NK_cell ## 6 T_cells dice &lt;- celldex::DatabaseImmuneCellExpressionData() res2 &lt;- SingleR(test = assay(pbmc, &quot;logcounts&quot;), ref = dice, labels = dice$label.main) head(res2) ## DataFrame with 6 rows and 4 columns ## scores labels ## &lt;matrix&gt; &lt;character&gt; ## 1 0.01278759:0.0594162:0.1731098:... T cells, CD4+ ## 2 0.26468267:0.1424061:0.0667195:... B cells ## 3 0.03184648:0.0768767:0.2039776:... T cells, CD4+ ## 4 -0.00914745:0.3439882:0.0610696:... Monocytes ## 5 -0.04285154:0.0396558:0.2513840:... NK cells ## 6 0.06123675:0.0980547:0.1470082:... T cells, CD4+ ## delta.next pruned.labels ## &lt;numeric&gt; &lt;character&gt; ## 1 0.00808206 T cells, CD4+ ## 2 0.12227658 B cells ## 3 0.05825145 T cells, CD4+ ## 4 0.28291862 Monocytes ## 5 0.15577995 NK cells ## 6 0.12673642 T cells, CD4+ 2.2.2 Annotate with SingleR result pbmc[[&#39;hpca_label&#39;]] &lt;- res$labels pbmc[[&#39;dice_label&#39;]] &lt;- res2$labels 2.2.3 Comparision with manual annotation result x &lt;- colData(pbmc)[, c(&quot;label&quot;, &quot;hpca_label&quot;, &quot;dice_label&quot;)] plot_list( manual = sc_dim(pbmc, reduction=&quot;UMAP&quot;), hpca = sc_dim(pbmc, reduction=&quot;UMAP&quot;, mapping=aes(color=hpca_label)), dice = sc_dim(pbmc, reduction=&quot;UMAP&quot;, mapping=aes(color=dice_label)), ncol = 3) &amp; sc_dim_geom_label(geom = ggrepel::geom_text_repel) &amp; theme(legend.position=&#39;inside&#39;) table(x[,c(1,2)]) ## hpca_label ## label B_cell CMP Monocyte NK_cell Platelets ## CD8+ T 0 0 0 32 0 ## B 333 2 0 0 0 ## Memory CD4+ 0 0 0 0 0 ## CD14+ Mono 0 0 444 0 0 ## NK 0 0 0 155 0 ## FCGR3A+ Mono 0 0 152 0 0 ## Native CD4+ T 0 2 0 2 0 ## DC 0 0 19 0 0 ## Platelet 0 0 0 0 12 ## hpca_label ## label Pre-B_cell_CD34- Pro-B_cell_CD34+ T_cells ## CD8+ T 1 1 363 ## B 3 4 7 ## Memory CD4+ 2 0 529 ## CD14+ Mono 48 0 0 ## NK 1 0 1 ## FCGR3A+ Mono 6 0 1 ## Native CD4+ T 2 0 514 ## DC 2 0 0 ## Platelet 0 0 0 table(x[,c(1,3)]) ## dice_label ## label B cells Monocytes NK cells T cells, CD4+ ## CD8+ T 0 1 174 148 ## B 340 4 1 3 ## Memory CD4+ 0 0 0 495 ## CD14+ Mono 0 492 0 0 ## NK 0 0 157 0 ## FCGR3A+ Mono 0 159 0 0 ## Native CD4+ T 0 2 0 279 ## DC 0 21 0 0 ## Platelet 0 12 0 0 ## dice_label ## label T cells, CD8+ ## CD8+ T 74 ## B 1 ## Memory CD4+ 36 ## CD14+ Mono 0 ## NK 0 ## FCGR3A+ Mono 0 ## Native CD4+ T 239 ## DC 0 ## Platelet 0 "],["cell-cell-communication.html", "3 Cell-cell communication 3.1 Input 3.2 CellChat 3.3 visulization", " 3 Cell-cell communication 3.1 Input The runCellChat() function requires a SingleCellExperiment object that includes cell clustering information. For details, refer to the Clustering session. The group parameter should reference a variable within the SingleCellExperiment object that holds the clustering data. Users can add their own clustering using the following commands: colData(sce)$group_name &lt;- group # OR sce[[&quot;group_name&quot;]] &lt;- group 3.2 CellChat Wrapper function for CellChat1. library(sclet) library(aplot) # use demo data from CellChat, hmskin_sce sce &lt;- qs::qread(&quot;data/hmskin_sce.qs&quot;) cci_obj &lt;- runCellChat(sce, group = &quot;labels&quot;) ## [1] &quot;Create a CellChat object from a data matrix&quot; ## Set cell identities for the new CellChat object ## The cell groups used for CellChat analysis are APOE+ FIB, FBN1+ FIB, COL11A1+ FIB, Inflam. FIB, cDC1, cDC2, LC, Inflam. DC, TC, Inflam. TC, CD40LG+ TC, NKT ## The number of highly variable ligand-receptor pairs used for signaling inference is 693 ## triMean is used for calculating the average gene expression per cell group. ## [1] &quot;&gt;&gt;&gt; Run CellChat on sc/snRNA-seq data &lt;&lt;&lt; [2024-10-09 15:14:23.501698]&quot; ## [1] &quot;&gt;&gt;&gt; CellChat inference is done. Parameter values are stored in `object@options$parameter` &lt;&lt;&lt; [2024-10-09 15:16:06.048892]&quot; 3.3 visulization groupSize &lt;- as.numeric(table(cci_obj@idents)) plot_list( ~CellChat::netVisual_circle(cci_obj@net$count, vertex.weight = groupSize, weight.scale = T, label.edge= F, title.name = &quot;Number of interactions&quot;), ~CellChat::netVisual_circle(cci_obj@net$weight, vertex.weight = groupSize, weight.scale = T, label.edge= F, title.name = &quot;Interaction weights/strength&quot;) ) pathways.show &lt;- c(&quot;CXCL&quot;) vertex.receiver = seq(1,4) # CellChat::netVisual_aggregate(cci_obj, signaling = pathways.show, vertex.receiver = vertex.receiver) CellChat::netVisual_aggregate(cci_obj, signaling = pathways.show, layout = &quot;circle&quot;) CellChat::netVisual_aggregate(cci_obj, signaling = pathways.show, layout = &quot;chord&quot;) CellChat::netVisual_heatmap(cci_obj, signaling = pathways.show, color.heatmap = &quot;Reds&quot;) group.cellType &lt;- c(rep(&quot;FIB&quot;, 4), rep(&quot;DC&quot;, 4), rep(&quot;TC&quot;, 4)) # grouping cell clusters into fibroblast, DC and TC cells names(group.cellType) &lt;- levels(cci_obj@idents) CellChat::netVisual_chord_cell(cci_obj, signaling = pathways.show, group = group.cellType, title.name = paste0(pathways.show, &quot; signaling network&quot;)) CellChat::netAnalysis_contribution(cci_obj, signaling = pathways.show) pairLR.CXCL &lt;- CellChat::extractEnrichedLR(cci_obj, signaling = pathways.show, geneLR.return = FALSE) LR.show &lt;- pairLR.CXCL[1,] vertex.receiver = seq(1,4) # CellChat::netVisual_individual(cci_obj, signaling = pathways.show, pairLR.use = LR.show, vertex.receiver = vertex.receiver) CellChat::netVisual_individual(cci_obj, signaling = pathways.show, pairLR.use = LR.show, layout = &quot;circle&quot;) ## [[1]] CellChat::netVisual_individual(cci_obj, signaling = pathways.show, pairLR.use = LR.show, layout = &quot;chord&quot;) ## [[1]] CellChat::netVisual_bubble(cci_obj, sources.use = 4, targets.use = c(5:11), remove.isolate = FALSE) https://htmlpreview.github.io/?https://github.com/jinworks/CellChat/blob/master/tutorial/CellChat-vignette.html#c-starting-from-a-singlecellexperiment-object↩︎ "],["svp.html", "4 SVP 4.1 runSGSA 4.2 runLISA 4.3 runLOCALBV", " 4 SVP Robust analysis of ‘gene set’ activity in spatial or single-cell data. library(SpatialExperiment) library(SingleCellExperiment) library(scuttle) library(SVP) library(ggplot2) library(ggsc) 4.1 runSGSA Calculate the activity of gene sets in spatial or single-cell data with restart walk with restart and hyper test weighted. sceSubPbmc is a small SingleCellExperiment data set from pbmck3 which contains 1304 genes and 800 cells (extract randomly). data(sceSubPbmc) sceSubPbmc &lt;- scuttle::logNormCounts(sceSubPbmc) # the using runMCA to perform MCA (Multiple Correspondence Analysis) # this is refer to the CelliD, but we using the Eigen to speed up. # You can view the help information of runMCA using ?runMCA. sceSubPbmc &lt;- runMCA(sceSubPbmc, assay.type = &#39;logcounts&#39;) CellCycle.Hs is the S and G2M gene list are from the Seurat which refer to this article (doi:10.1126/science.aad050), the G1 gene list is from the G1_PHASE of Human Gene Set in MSigDB, but remove the duplicated records with S and G2M gene list. # Next, we can calculate the activity score of gene sets provided. # Here, we use the Cell Cycle gene set from the Seurat # You can use other gene set, such as KEGG pathway, GO, Hallmark of MSigDB # or TFs gene sets etc. data(CellCycle.Hs) sceSubPbmc &lt;- runSGSA(sceSubPbmc, gset.idx.list = CellCycle.Hs, gsvaExp.name = &#39;CellCycle&#39;) ## elapsed time is 1.090000 seconds ## elapsed time is 0.020000 seconds ## elapsed time is 0.030000 seconds ## elapsed time is 0.020000 seconds ## elapsed time is 0.020000 seconds # Then a SVPE class which inherits SingleCellExperiment, is return. sceSubPbmc ## class: SVPExperiment ## dim: 1304 800 ## metadata(0): ## assays(2): counts logcounts ## rownames(1304): LYZ GNG7 ... TAF1 TBRG4 ## rowData names(0): ## colnames(800): ACGAACTGGCTATG GGGCCAACCTTGGA ... ## TTCAAGCTAAGAAC TTACACACGTGTTG ## colData names(2): seurat_annotations sizeFactor ## reducedDimNames(1): MCA ## mainExpName: RNA ## altExpNames(0): ## spatialCoords names(0) : ## imgData names(0): ## gsvaExps names(1) : CellCycle # You can obtaion the score matrix by following the commond sceSubPbmc |&gt; gsvaExp(&#39;CellCycle&#39;) ## class: SingleCellExperiment ## dim: 3 800 ## metadata(0): ## assays(1): affi.score ## rownames(3): S G2M G1 ## rowData names(4): exp.gene.num gset.gene.num ## gene.occurrence.rate geneSets ## colnames(800): ACGAACTGGCTATG GGGCCAACCTTGGA ... ## TTCAAGCTAAGAAC TTACACACGTGTTG ## colData names(2): seurat_annotations sizeFactor ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0): sceSubPbmc |&gt; gsvaExp(&quot;CellCycle&quot;) |&gt; assay() |&gt; t() |&gt; head() ## 6 x 3 sparse Matrix of class &quot;dgCMatrix&quot; ## S G2M G1 ## ACGAACTGGCTATG 8.912990e-04 1.626142e-05 7.207289e-06 ## GGGCCAACCTTGGA 9.413528e-06 1.606825e-09 2.603956e-08 ## ACGAGGGACAGGAG 1.416664e-05 1.025511e-04 7.967855e-04 ## CAGGTTGAGGATCT 1.322563e-06 1.550434e-12 1.456777e-11 ## CATACTTGGGTTAC 4.964354e-05 6.391833e-04 8.241869e-04 ## AAGCCATGAACTGC 5.136016e-04 7.587088e-05 8.797016e-04 # Then you can use the ggsc or other package to visulize # and you can try to use the findMarkers of scran or other packages to identify # the different gene sets. sceSubPbmc &lt;- sceSubPbmc |&gt; scater::runPCA(assay.type = &#39;logcounts&#39;, ntop = 600) |&gt; scater::runUMAP(dimred = &#39;PCA&#39;) # withReducedDim = TRUE, the original reducetion results from original gene features # will be add the colData in the sce.cellcycle. sce.cellcycle &lt;- sceSubPbmc |&gt; gsvaExp(&#39;CellCycle&#39;, withReducedDim=TRUE) sce.cellcycle ## class: SingleCellExperiment ## dim: 3 800 ## metadata(0): ## assays(1): affi.score ## rownames(3): S G2M G1 ## rowData names(4): exp.gene.num gset.gene.num ## gene.occurrence.rate geneSets ## colnames(800): ACGAACTGGCTATG GGGCCAACCTTGGA ... ## TTCAAGCTAAGAAC TTACACACGTGTTG ## colData names(2): seurat_annotations sizeFactor ## reducedDimNames(3): MCA PCA UMAP ## mainExpName: NULL ## altExpNames(0): sce.cellcycle |&gt; sc_violin( features = rownames(sce.cellcycle), mapping = aes(x=seurat_annotations, fill = seurat_annotations) ) + scale_x_discrete(guide=guide_axis(angle=-45)) sce.cellcycle |&gt; sc_feature(features= &quot;S&quot;, reduction=&#39;UMAP&#39;) library(scran) cellcycle.test.res &lt;- sce.cellcycle |&gt; findMarkers( group = sce.cellcycle$seurat_annotations, test.type = &#39;wilcox&#39;, assay.type = &#39;affi.score&#39;, add.summary = TRUE ) cellcycle.test.res$B ## DataFrame with 3 rows and 16 columns ## self.average other.average self.detected other.detected ## &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; ## S 0.000615131 0.000889084 1 1 ## G2M 0.000760345 0.000723091 1 1 ## G1 0.000914127 0.000891885 1 1 ## Top p.value FDR summary.AUC ## &lt;integer&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; ## S 1 1.23356e-03 1.85034e-03 0.681366 ## G2M 1 5.34716e-06 1.60415e-05 0.738194 ## G1 1 1.70067e-02 1.70067e-02 0.354864 ## AUC.Naive CD4 T AUC.Memory CD4 T AUC.CD14+ Mono ## &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; ## S 0.503904 0.425679 0.681366 ## G2M 0.588138 0.496889 0.738194 ## G1 0.401351 0.354864 0.504861 ## AUC.CD8 T AUC.FCGR3A+ Mono AUC.NK AUC.DC ## &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; ## S 0.400000 0.591453 0.238384 0.682437 ## G2M 0.444444 0.556239 0.432323 0.701792 ## G1 0.333333 0.394530 0.345455 0.513978 ## AUC.Platelet ## &lt;numeric&gt; ## S 0.222222 ## G2M 0.955556 ## G1 0.977778 4.2 runLISA hpda_spe_cell_dec is the result of runSGSA with HPDA A sample from (doi:10.1038/s41587-019-0392-8). Each item in the matrix is the marker gene set activity in the spot. The marker gene set represents the cell type. We can use svp the investigate if a cell type cluters and if two cell types appear in the same region. Usage of local indicators of spatial association (LISA) to identify the hotspot in the spatial space data(hpda_spe_cell_dec) # r$&gt; assay(hpda_spe_cell_dec)[1:5,1:5] # 5 x 5 sparse Matrix of class &quot;dgCMatrix&quot; # Spot1 Spot2 Spot3 Spot4 Spot5 # Acinar cells 3.283881e-04 6.931743e-06 4.820951e-05 1.882577e-03 9.269843e-04 # Cancer clone A 2.880388e-04 2.013973e-04 9.167013e-05 9.642225e-05 6.704812e-05 # Cancer clone B 1.569730e-04 2.744810e-04 2.151324e-04 1.502651e-05 4.283322e-06 # Ductal APOL1 high-hypoxic 3.132481e-05 3.902286e-04 4.240874e-05 3.140970e-06 1.464118e-04 # Ductal CRISP3 high-centroacinar like 9.546611e-05 5.025320e-03 2.112512e-03 1.140155e-03 3.873088e-03 svres &lt;- runDetectSVG(hpda_spe_cell_dec, assay.type = &#39;affi.score&#39;, method = &#39;moransi&#39;, action = &#39;only&#39;) ## elapsed time is 0.070000 seconds # r$&gt; svres |&gt; dplyr::arrange(rank) |&gt; head() # obs expect.moransi sd.moransi Z.moransi pvalue padj rank # Cancer clone A 0.7086916 -0.00234192 0.02803920 25.35855 3.616015e-142 7.232030e-141 1 # Acinar cells 0.6958980 -0.00234192 0.02788076 25.04379 1.020141e-138 1.020141e-137 2 # Cancer clone B 0.6586104 -0.00234192 0.02803039 23.57985 3.102650e-123 2.068434e-122 3 # mDCs A 0.5824019 -0.00234192 0.02760394 21.18334 6.801396e-100 3.400698e-99 4 # Ductal CRISP3 high-centroacinar like 0.5605955 -0.00234192 0.02794187 20.14673 1.437344e-90 5.749375e-90 5 # Endothelial cells 0.5362475 -0.00234192 0.02757573 19.53128 2.976221e-85 9.920735e-85 6 lisa.res12 &lt;- hpda_spe_cell_dec |&gt; runLISA( features = c(1, 2, 3), assay.type = &#39;affi.score&#39;, weight.method = &quot;knn&quot;, k = 10, action = &#39;get&#39;, ) lisa.res12 ## List of length 3 ## names(3): Acinar cells Cancer clone A Cancer clone B lisa.res12[[&#39;Acinar cells&#39;]] |&gt; head() ## Gi E.Gi Var.Gi Z.Gi ## Spot1 0.0003594390 0.00234192 1.553580e-06 -1.5905315 ## Spot2 0.0008854181 0.00234192 1.551111e-06 -1.1694717 ## Spot3 0.0013421397 0.00234192 1.551438e-06 -0.8026710 ## Spot4 0.0011632261 0.00234192 1.563140e-06 -0.9427625 ## Spot5 0.0011940380 0.00234192 1.557730e-06 -0.9197108 ## Spot6 0.0008942096 0.00234192 1.551895e-06 -1.1621191 ## Pr (z != E(Gi)) cluster.no.test cluster.test ## Spot1 0.1117150 Low NoSign ## Spot2 0.2422136 Low NoSign ## Spot3 0.4221649 Low NoSign ## Spot4 0.3458024 Low NoSign ## Spot5 0.3577239 Low NoSign ## Spot6 0.2451871 Low NoSign lisa.res12[[&quot;Cancer clone A&quot;]] |&gt; head() ## Gi E.Gi Var.Gi Z.Gi ## Spot1 0.0004249351 0.00234192 1.394101e-06 -1.623573 ## Spot2 0.0003899767 0.00234192 1.393067e-06 -1.653793 ## Spot3 0.0003702933 0.00234192 1.391701e-06 -1.671290 ## Spot4 0.0004787373 0.00234192 1.391761e-06 -1.579331 ## Spot5 0.0004788597 0.00234192 1.391386e-06 -1.579440 ## Spot6 0.0005373218 0.00234192 1.393284e-06 -1.528836 ## Pr (z != E(Gi)) cluster.no.test cluster.test ## Spot1 0.10446707 Low NoSign ## Spot2 0.09816948 Low NoSign ## Spot3 0.09466441 Low NoSign ## Spot4 0.11426017 Low NoSign ## Spot5 0.11423509 Low NoSign ## Spot6 0.12630517 Low NoSign colData(hpda_spe_cell_dec)$`cluster.test.Cancer.A` &lt;- lisa.res12[[&quot;Cancer clone A&quot;]] |&gt; dplyr::pull(cluster.test) colData(hpda_spe_cell_dec)$`cluster.test.Acinar` &lt;- lisa.res12[[&quot;Acinar cells&quot;]] |&gt; dplyr::pull(cluster.test) colData(hpda_spe_cell_dec)$`cluster.test.Cancer.B` &lt;- lisa.res12[[&quot;Cancer clone B&quot;]] |&gt; dplyr::pull(cluster.test) p1 &lt;- sc_spatial(hpda_spe_cell_dec, features = rownames(hpda_spe_cell_dec), mapping = aes(x=x, y=y, color=cluster.test.Cancer.A), plot.pie = T, pie.radius.scale = .8, bg_circle_radius = 1.1, color=NA, linewidth=2 ) + scale_color_manual(values=c(&quot;black&quot;, &quot;white&quot;)) p1 f1 &lt;- sc_spatial(hpda_spe_cell_dec, features=&quot;Cancer clone A&quot;, mapping=aes(x = x, y = y), pointsize=10) + geom_scattermore2(mapping = aes(bg_color=cluster.test.Cancer.A, subset=cluster.test.Cancer.A==&quot;High&quot;), bg_line_width = .16, gap_line_width = .14, pointsize = 7) + scale_bg_color_manual(values=c(&#39;black&#39;)) f1 f2 &lt;- sc_spatial(hpda_spe_cell_dec, features=&quot;Acinar cells&quot;, mapping=aes(x=x,y=y), pointsize=10) + geom_scattermore2(mapping = aes(bg_color=cluster.test.Acinar, subset=cluster.test.Acinar==&quot;High&quot;), bg_line_width = .16, gap_line_width = .14, pointsize = 7) + scale_bg_color_manual(values=c(&#39;black&#39;)) f2 f3 &lt;- sc_spatial(hpda_spe_cell_dec, features=&quot;Cancer clone B&quot;, mapping=aes(x=x,y=y), pointsize=10) + geom_scattermore2(mapping = aes(bg_color=cluster.test.Cancer.B, subset=cluster.test.Cancer.B==&quot;High&quot;), bg_line_width = .18, gap_line_width = .14, pointsize = 8) + scale_bg_color_manual(values=c(&#39;black&#39;)) f3 4.3 runLOCALBV explore the local bivariate relationship in the spatial space. res1 &lt;- hpda_spe_cell_dec |&gt; runLOCALBV( features1 = &#39;Cancer clone A&#39;, features2 = &#39;Cancer clone B&#39;, assay.type=&#39;affi.score&#39; ) res1 res1[[&#39;Cancer clone A_VS_Cancer clone B&#39;]] |&gt; head() # LocalLee Gi E.Gi Var.Gi Z.Gi Pr (z &gt; E(Gi)) cluster.no.test cluster.test # Spot1 0.2656572 0.0007993283 0.00234192 1.685012e-06 -1.1883644 0.8826551 Low NoSign # Spot2 0.1928726 0.0006520670 0.00234192 3.060135e-06 -0.9660035 0.8329788 Low NoSign # Spot3 0.2098906 0.0007134499 0.00234192 2.544445e-06 -1.0209003 0.8463492 Low NoSign # Spot4 0.2609793 0.0007131499 0.00234192 2.545557e-06 -1.0208654 0.8463409 Low NoSign # Spot5 0.1769749 0.0007300670 0.00234192 3.059710e-06 -0.9214789 0.8215998 Low NoSign # Spot6 0.1736672 0.0004656579 0.00234192 2.175086e-06 -1.2721999 0.8983489 Low NoSign "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
